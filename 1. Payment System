
Introduction
Payment System for Ecommerce Website

For introduction:

Anology to a kid. Suppose you want to buy a toy from a shop. how you are buying. You are paying using Money. You can use cash, cards, checks etc. 
Payment System Handles the smooth transfer of money in between one system to other.
Examples:
--> In Amazon, ordering a Toy. First you enter your card details, Payment system deduct the price from your
card and process it and ship the order to the address you mentioned.
Here money tranfered from your account  --> Amazon account
Amazon is not the real  supplier of the product.
Amazon takes the commision and transportation cost and send the rest amount to the suppliers

Cash flow from Customer --> AMAZON --> Supplier

We are going to design the entire system.

It should be reliable, scalable and Flexible Payments

Question ask to Interviewer:
Questions to Ask:

1. What kind of Payment system that we are building ?
Ans: Are we buidling the backend side of a payment system of Ecommerce Website. When the customer place the order, we have to handle everything till the customer recive the product.

2. What all payment options supports?
Credit cards, Bank Transfer, Debit Cards

3. Do we need to handle the Payment procssing by ourselfs or using 3rd party services like Stripe, Square etc.
4. So we dont need to store the credit card informations for security and complaince requirements. 

5. Does this application go Global ? Need to accept other curriencies and international payments? Yes

6. How many transactions per Day ? 1 million or 10 Lakh

7. So we need to support cash-in-flow and cash-out-flow
cash-in-flow = customer --> Ecommerce Account 
cash-out-flow = Ecommerce Account --> Supplier

Functional & Non-Functional Requirements ::
Functional Requirements:

Cash-in-flow == Payment system recieves money from customers on behalf of sellers
Pay-out-flow == Sellers recieved the money once the shipping is completed to the customer after deducting the commision & logistics fees from Ecommerce site

Non-Functional Requirements:

Since it is a financial usecases, should focus on reliablity and Fault Tolerance. Payments should be carefully handled.

Reconcilaiation process at the end of the day to validate the transactions and making sure that system is consistent.

Estimate Calculation:
Transaction per Seconds : 1 million/10^5  = 1000000/100000 = 10/seconds
It means we need a database that store the payment transcation correctly at high throughput

High Level Design:
We need to care about 2 steps

Cash-in-flow == When the customer place an order, money transfer from customer account to Amazon bank account. Amazon takes a commision and transportation fees

Cash-out-flow == Once the product shipped and recieved by the customer, money transfered from Amazon Bank account to Supplier account

DRAW THE DIAGRAM with Components:

Components:

Payment Event
Payment Service with DB
Payment Executor with DB
Ledger with DB
Wallet with DB
Payment Service Provider PSP 

STEPS:
1. When user clicks place order button, payment event is generated and send to payment service.
2. Payment service stores the event in database
3. In a single order, multiple products in a single order by differnt sellers. Split the payment based on orders or Sellers and passed to Payment Executors
4. Payment Executor stores the payment orders in the database.
5. Payment Executor calls the external PSP to process the credit/Debit card Payment
6. External PSP validate the credentials and process the payment.
7. PSP sends confirmation to Payment service if accept or failed confirmation 
8. Added the records in Ledger and Wallet . Ledger - credited/Debited amount from the accounts. Wallet track the balance amount of each merchant. 
